version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_medical
    environment:
      POSTGRES_DB: medical_appointment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - medical_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  medicalappointment.api:
    image: medicalappointment.api
    build:
      context: .
      dockerfile: MedicalAppointment.Api/Dockerfile
    container_name: medical_api
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=medical_appointment;Username=postgres;Password=postgres123
    depends_on:
      medicalappointment.api:
        condition: service_healthy
    networks:
      - medical_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  medical_network:
    driver: bridge